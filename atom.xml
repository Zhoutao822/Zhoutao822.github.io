<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tao</title>
  <icon>http://zhoutao822.coding.me/icon.png</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhoutao822.coding.me/"/>
  <updated>2020-01-18T02:58:44.418Z</updated>
  <id>http://zhoutao822.coding.me/</id>
  
  <author>
    <name>Tao Zhou</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker-Ubuntu服务器安装Seafile私人网盘</title>
    <link href="http://zhoutao822.coding.me/archives/2.9125e+72.html"/>
    <id>http://zhoutao822.coding.me/archives/2.9125e+72.html</id>
    <published>2020-01-14T11:51:17.000Z</published>
    <updated>2020-01-18T02:58:44.418Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:41 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://cloud.seafile.com/published/seafile-manual-cn/docker/%E7%94%A8Docker%E9%83%A8%E7%BD%B2Seafile.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;用 Docker 部署 Seafile 服务&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Seafile 是一款开源的企业云盘，注重可靠性和性能。支持 Windows, Mac, Linux, iOS, Android 平台。支持文件同步或者直接挂载到本地访问。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tips" scheme="http://zhoutao822.coding.me/categories/Tips/"/>
    
    
      <category term="Ubuntu" scheme="http://zhoutao822.coding.me/tags/Ubuntu/"/>
    
      <category term="Seafile" scheme="http://zhoutao822.coding.me/tags/Seafile/"/>
    
      <category term="Docker" scheme="http://zhoutao822.coding.me/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker-Ubuntu服务器安装chevereto图床</title>
    <link href="http://zhoutao822.coding.me/archives/44250e0e.html"/>
    <id>http://zhoutao822.coding.me/archives/44250e0e.html</id>
    <published>2020-01-14T11:47:47.000Z</published>
    <updated>2020-01-17T15:07:46.308Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:41 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://hub.docker.com/r/nmtan/chevereto/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Chevereto Free Docker&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zealot.top/%E4%BD%BF%E7%94%A8Docker%E8%BD%BB%E6%9D%BE%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8Achevereto.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;使用Docker轻松搭建个人图床chevereto&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;img src=&quot;/archives/44250e0e/chevereto4.png&quot;&gt;
    
    </summary>
    
    
      <category term="Tips" scheme="http://zhoutao822.coding.me/categories/Tips/"/>
    
    
      <category term="Ubuntu" scheme="http://zhoutao822.coding.me/tags/Ubuntu/"/>
    
      <category term="Docker" scheme="http://zhoutao822.coding.me/tags/Docker/"/>
    
      <category term="Chevereto" scheme="http://zhoutao822.coding.me/tags/Chevereto/"/>
    
  </entry>
  
  <entry>
    <title>Homebrew+MySQL+DataGrip</title>
    <link href="http://zhoutao822.coding.me/archives/46c7a56d.html"/>
    <id>http://zhoutao822.coding.me/archives/46c7a56d.html</id>
    <published>2020-01-11T13:31:50.000Z</published>
    <updated>2020-01-18T09:21:09.674Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:41 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/datagrip/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;DataGrip&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;MySQL 是最流行的关系型数据库管理系统。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tips" scheme="http://zhoutao822.coding.me/categories/Tips/"/>
    
    
      <category term="Mac" scheme="http://zhoutao822.coding.me/tags/Mac/"/>
    
      <category term="Ubuntu" scheme="http://zhoutao822.coding.me/tags/Ubuntu/"/>
    
      <category term="Linuxbrew" scheme="http://zhoutao822.coding.me/tags/Linuxbrew/"/>
    
      <category term="Homebrew" scheme="http://zhoutao822.coding.me/tags/Homebrew/"/>
    
      <category term="MySQL" scheme="http://zhoutao822.coding.me/tags/MySQL/"/>
    
      <category term="DataGrip" scheme="http://zhoutao822.coding.me/tags/DataGrip/"/>
    
      <category term="HeidiSQL" scheme="http://zhoutao822.coding.me/tags/HeidiSQL/"/>
    
  </entry>
  
  <entry>
    <title>Android-共享元素动画效果</title>
    <link href="http://zhoutao822.coding.me/archives/2943f9f3.html"/>
    <id>http://zhoutao822.coding.me/archives/2943f9f3.html</id>
    <published>2020-01-11T13:30:27.000Z</published>
    <updated>2020-01-17T15:07:46.305Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:41 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://developer.android.com/training/transitions/start-activity&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Android Developers文档指南&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/android/animation-samples&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github animation-samples&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://mikescamell.com/shared-element-transitions-part-1/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Shared Element Transitions - Part 1: Activities&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://mikescamell.com/shared-element-transitions-part-2/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Shared Element Transitions - Part 2: Fragments&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://mikescamell.com/shared-element-transitions-part-3/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Shared Element Transitions - Part 3: Picasso &amp;amp; Glide&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/codepath/android_guides/wiki/Shared-Element-Activity-Transition&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;android_guides&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://medium.com/@bherbst/fragment-transitions-with-shared-elements-7c7d71d31cbb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Fragment transitions with shared elements&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;共享元素可以在Activity之间或者Fragment之间实现非常舒适的动画效果，如下图所示，特别是在跳转的界面之间拥有相同的界面元素，比如同一张图片但是大小不同，同一个View但是位置不同。需要注意的是最低api需要为21，即Android LOLLIPOP。&lt;/p&gt;&lt;img src=&quot;/archives/2943f9f3/cat.gif&quot;&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/tags/Android/"/>
    
      <category term="Material" scheme="http://zhoutao822.coding.me/tags/Material/"/>
    
      <category term="ShareElement" scheme="http://zhoutao822.coding.me/tags/ShareElement/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu+linuxbrew+zsh+oh-my-zsh</title>
    <link href="http://zhoutao822.coding.me/archives/3a6fd8b5.html"/>
    <id>http://zhoutao822.coding.me/archives/3a6fd8b5.html</id>
    <published>2020-01-11T12:52:42.000Z</published>
    <updated>2020-01-17T15:07:46.305Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:41 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://docs.brew.sh/Homebrew-on-Linux&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Homebrew Documentation&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://ohmyz.sh/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Oh My ZSH!&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Installing ZSH&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;租一个服务器能干什么，我想大致分为两个方面：使用和学习。可以将云盘部署到服务器上，那么你就拥有了一个私有云盘，也可以将WordPress部署到服务器上，那么你就拥有了一个可以写博客的个人网站；学习JavaWeb，需要了解Tomcat、MySQL、Nginx、Redis等等，你可以在服务器上运行这些程序而不必使用宝贵的本地资源。为了后续的使用以及学习，首先需要优化一下我们的服务器配置，因为控制服务器一般都是通过命令行，所以前期优化一下，后续会更好操作。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tips" scheme="http://zhoutao822.coding.me/categories/Tips/"/>
    
    
      <category term="Ubuntu" scheme="http://zhoutao822.coding.me/tags/Ubuntu/"/>
    
      <category term="Linuxbrew" scheme="http://zhoutao822.coding.me/tags/Linuxbrew/"/>
    
      <category term="Zsh" scheme="http://zhoutao822.coding.me/tags/Zsh/"/>
    
      <category term="Oh-my-zsh" scheme="http://zhoutao822.coding.me/tags/Oh-my-zsh/"/>
    
  </entry>
  
  <entry>
    <title>Android-Q适配-存储方式</title>
    <link href="http://zhoutao822.coding.me/archives/bb3604db.html"/>
    <id>http://zhoutao822.coding.me/archives/bb3604db.html</id>
    <published>2019-10-26T03:02:06.000Z</published>
    <updated>2020-01-17T15:07:46.304Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:41 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://developer.android.com/preview/privacy/scoped-storage&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Android Q 隐私权变更：分区存储&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.android.com/training/data-storage/files/external&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Save a file on external storage&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://juejin.im/post/5d838a7af265da03ee6a90cd&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Android 10(Android Q) 适配&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.android.com/guide/topics/providers/document-provider?hl=zh-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;使用存储访问框架打开文件&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000019224425&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Android Q 沙箱适配多媒体文件总结&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Android Q之后对系统存储方式进行了调整，简而言之就是禁止开发人员随意通过路径访问操作外部存储文件，内部存储没有影响。这样做的目的很明显，即往后原生Android的文件管理器将不会出现各种App生成的乱七八糟的文件，不同类型的文件都在其各自相应的位置。&lt;/p&gt;&lt;p&gt;示意图如下，主要行为变更在媒体文件（音频、视频、图片）以及下载文件中&lt;/p&gt;&lt;img src=&quot;/archives/bb3604db/file.png&quot;&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/categories/Android/"/>
    
    
      <category term="AndroidQ" scheme="http://zhoutao822.coding.me/tags/AndroidQ/"/>
    
  </entry>
  
  <entry>
    <title>LSGAN</title>
    <link href="http://zhoutao822.coding.me/archives/8f4a6b8f.html"/>
    <id>http://zhoutao822.coding.me/archives/8f4a6b8f.html</id>
    <published>2019-08-29T12:51:48.000Z</published>
    <updated>2020-01-17T15:07:46.302Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:41 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://arxiv.org/abs/1611.04076&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Least Squares Generative Adversarial Networks&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Deep Learning" scheme="http://zhoutao822.coding.me/categories/Deep-Learning/"/>
    
    
      <category term="Theory" scheme="http://zhoutao822.coding.me/tags/Theory/"/>
    
      <category term="LSGAN" scheme="http://zhoutao822.coding.me/tags/LSGAN/"/>
    
  </entry>
  
  <entry>
    <title>Android IPC-AIDL、Messenger和Socket</title>
    <link href="http://zhoutao822.coding.me/archives/c75dc4ab.html"/>
    <id>http://zhoutao822.coding.me/archives/c75dc4ab.html</id>
    <published>2019-07-25T13:41:57.000Z</published>
    <updated>2020-01-17T15:07:46.303Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:41 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://item.m.jd.com/product/11760209.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Android开发艺术探索&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Android系统中的每一个应用都运行在一个各自的进程中，那么不同的应用是如何进行数据交互的呢，大致分为两类，第一类我称之为伪进程间通信，其特征是不同进程都对同一个文件进行操作，数据交互通过此文件，比如两个进程共同读写同一个数据库；第二类我称之为真进程间通信，特征是基于系统级别的Binder进行服务调用从而实现的进程间通信或者Socket，具体细节后面再说。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/tags/Android/"/>
    
      <category term="IPC" scheme="http://zhoutao822.coding.me/tags/IPC/"/>
    
      <category term="AIDL" scheme="http://zhoutao822.coding.me/tags/AIDL/"/>
    
      <category term="Binder" scheme="http://zhoutao822.coding.me/tags/Binder/"/>
    
      <category term="Messenger" scheme="http://zhoutao822.coding.me/tags/Messenger/"/>
    
      <category term="Socket" scheme="http://zhoutao822.coding.me/tags/Socket/"/>
    
      <category term="进程间通信" scheme="http://zhoutao822.coding.me/tags/%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>Android框架-RxJava</title>
    <link href="http://zhoutao822.coding.me/archives/686da54d.html"/>
    <id>http://zhoutao822.coding.me/archives/686da54d.html</id>
    <published>2019-07-25T12:32:26.000Z</published>
    <updated>2020-01-17T15:07:46.314Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:42 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxJava/tree/2.x&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RxJava2&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://greenrobot.org/eventbus/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;EventBus&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jianshu.com/p/1a5a3db45cfa&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Android Handler 消息机制详述&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jianshu.com/p/ee1342fcf5e7&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Android 多线程：手把手教你使用AsyncTask&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://juejin.im/post/5a6c36fff265da3e2f012f82&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;EventBus使用详解&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://juejin.im/post/5a224cc76fb9a04527256683&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Rxjava这一篇就够了，墙裂推荐&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.10tiao.com/html/227/201802/2650242399/1.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;精彩的RxJava源码剖析&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://gank.io/post/560e15be2dca930e00da1083&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;给 Android 开发者的 RxJava 详解&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Android中很多地方都需要跨线程通信，这是由于Android主线程不允许进行复杂的网络请求或者其他非常耗时的操作，否则会导致ANR，主线程只能进行UI操作，比如修改某个控件的text、设置某个控件不可见等等，因此网络请求等操作需要在其他线程中完成，当数据在其他线程中获取完毕时，通过跨线程通信将数据传到主线程中，主线程就可以直接根据数据进行UI操作。常见的跨线程通信的方式有Handler、AsyncTask、EventBus以及RxJava等，前两个是Android自带，后两者是封装好的第三方库。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/tags/Android/"/>
    
      <category term="Handler" scheme="http://zhoutao822.coding.me/tags/Handler/"/>
    
      <category term="AsyncTask" scheme="http://zhoutao822.coding.me/tags/AsyncTask/"/>
    
      <category term="EventBus" scheme="http://zhoutao822.coding.me/tags/EventBus/"/>
    
      <category term="RxJava" scheme="http://zhoutao822.coding.me/tags/RxJava/"/>
    
      <category term="多线程" scheme="http://zhoutao822.coding.me/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Material组件-Snackbar</title>
    <link href="http://zhoutao822.coding.me/archives/d1370632.html"/>
    <id>http://zhoutao822.coding.me/archives/d1370632.html</id>
    <published>2019-07-23T13:46:04.000Z</published>
    <updated>2020-01-17T15:07:46.301Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:41 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://material.io/collections/developer-tutorials/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MATERIAL DESIGN&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Snackbar是类似与Toast的一种信息提示控件，但是与Toast不同的是Snackbar是从界面底部弹出的且支持一个点击事件，默认情况下Snackbar内部有两个子控件分别是TextView和Button，两者水平排列，TextView用于显示信息，Button用于实现点击事件。&lt;/p&gt;&lt;img src=&quot;/archives/d1370632/snackbar0.gif&quot;&gt;&lt;h2 id=&quot;1-Snackbar使用&quot;&gt;&lt;a href=&quot;#1-Snackbar使用&quot; class=&quot;headerlink&quot; title=&quot;1. Snackbar使用&quot;&gt;&lt;/a&gt;1. Snackbar使用&lt;/h2&gt;&lt;p&gt;Snackbar属于Material组件中的一种，如果你的应用使用了Material Theme以及AppCompatActivity，则Snackbar会获得圆角、四周有margin空隙的效果。&lt;/p&gt;&lt;p&gt;默认情况下使用Snackbar，调用的方式也非常类似Toast&lt;/p&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// view是当前页面内的某个view，根据源码可知，make方法会找view的父view，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 直到父view是FrameLayout或者CoordinateLayout，然后将其作为root给inflate方法调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// inflate会加载默认的布局文件，这里根据是否使用Material Theme会加载不同的布局文件，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 即上文我提到的效果，与此同时会将text的内容赋给布局文件中的TextView，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 如果父view是CoordinateLayout，则Snackbar还支持右滑取消的功能，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Snackbar.LENGTH_SHORT就类似于Toast.LENGTH_SHORT用于控制Snackbar的持续时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Snackbar snackbar = Snackbar.make(view, text, Snackbar.LENGTH_SHORT);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;snackbar.show();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/tags/Android/"/>
    
      <category term="Material" scheme="http://zhoutao822.coding.me/tags/Material/"/>
    
      <category term="Snackbar" scheme="http://zhoutao822.coding.me/tags/Snackbar/"/>
    
  </entry>
  
  <entry>
    <title>Android框架-Gson</title>
    <link href="http://zhoutao822.coding.me/archives/b0107659.html"/>
    <id>http://zhoutao822.coding.me/archives/b0107659.html</id>
    <published>2019-07-20T15:09:12.000Z</published>
    <updated>2020-01-17T15:07:46.301Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:41 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/google/gson/blob/master/UserGuide.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Gson User Guide&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;json是一种数据格式，类似与键值对的形式，常用于服务器与客户端之间数据传输，以键值对形式传输的数据在客户端进行解析时必然需要对不同的key寻找其对应的value，通常来说这种解析数据的过程非常繁琐，但是没有难度，所以Google推出了Gson这个工具，用于解析json数据并直接将其实例化。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/tags/Android/"/>
    
      <category term="Gson" scheme="http://zhoutao822.coding.me/tags/Gson/"/>
    
      <category term="json" scheme="http://zhoutao822.coding.me/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>Android框架-Retrofit与OkHttp</title>
    <link href="http://zhoutao822.coding.me/archives/6c51e275.html"/>
    <id>http://zhoutao822.coding.me/archives/6c51e275.html</id>
    <published>2019-07-20T01:58:58.000Z</published>
    <updated>2020-01-17T15:07:46.313Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:42 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://www.tutorialsteacher.com/https&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HTTPS Tutorials&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2016/08/http.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HTTP 协议入门&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://square.github.io/retrofit/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Retrofit&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://square.github.io/okhttp/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OkHttp&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://juejin.im/post/5a31db566fb9a045257820b2#heading-2&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OkHttp使用详解&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.baeldung.com/retrofit&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Introduction to Retrofit&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://juejin.im/post/5c9cb008e51d455ec63f7aa6&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Android Retrofit 2.5.0使用基础详解&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://juejin.im/post/5d1f2462f265da1bbc6ff5e8#heading-13&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Retrofit使用拦截器添加Cookie&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://design-patterns.readthedocs.io/zh_CN/latest/creational_patterns/simple_factory.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Factory Pattern&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Http，超文本传输协议，Https，更加安全的超文本传输协议，目前大量用于客户端与服务端之间的信息交流，属于应用层协议，下面有传输层TCP协议、网络层IP协议以及数据链路层为其提供保障。以登录功能为例，每一次输入账户密码后点击登录按钮就做了一次对服务器的Http请求（POST），我们收到的结果比如账号密码错误或者登录成功等信息就是服务器对Http请求的回复。Http与Https的区别在于后者采用了SSL（Secure Socket Layer安全套接层），简而言之就是对传输的数据进行了加密。具体细节可以在&lt;a href=&quot;https://www.tutorialsteacher.com/https&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HTTPS Tutorials&lt;/a&gt;或者其他资料中找到。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/tags/Android/"/>
    
      <category term="Http" scheme="http://zhoutao822.coding.me/tags/Http/"/>
    
      <category term="Https" scheme="http://zhoutao822.coding.me/tags/Https/"/>
    
      <category term="Retrofit" scheme="http://zhoutao822.coding.me/tags/Retrofit/"/>
    
      <category term="OkHttp" scheme="http://zhoutao822.coding.me/tags/OkHttp/"/>
    
      <category term="工厂模式" scheme="http://zhoutao822.coding.me/tags/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Android框架-Dagger2</title>
    <link href="http://zhoutao822.coding.me/archives/51b2fcf0.html"/>
    <id>http://zhoutao822.coding.me/archives/51b2fcf0.html</id>
    <published>2019-07-02T12:26:19.000Z</published>
    <updated>2020-01-17T15:07:46.310Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:42 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/2ec39d8b7e98&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Android开发之dagger.android–Activity&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://dagger.dev/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Dagger&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jianshu.com/p/24af4c102f62?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Dagger2 最清晰的使用教程&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://blog.mindorks.com/the-new-dagger-2-android-injector-cbe7d55afa6a&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;The New Dagger2&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jianshu.com/p/2ac2f39cb25f&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Dagger 2 完全解析&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Dagger2框架是一个依赖注入框架，它既可以用于Java Web项目也可以用于Android项目，依赖注入是什么意思呢&lt;/p&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Dependent&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Dependency dependency;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 属性注入 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Dependent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Dependency dependency)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.dependency = dependency;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// public Dependent()&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//     this.dependency = new Dependency();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 方法注入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// public void setDependency(Dependency dependency)&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//     this.dependency = dependency;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;看名字知含义，在上面的代码中Dependent类的构造始终需要Dependency类，那么我们就称Dependency为依赖，将其引入Dependent中的过程称为注入，上述代码在构造函数中引入，当然也可以通过set方法注入，无论是哪种方式都会面临一个问题就是当我们后续如果需要修改Dependency的构造函数时，需要在所有包含&lt;code&gt;new Dependency()&lt;/code&gt;的代码中进行修改，显然这是非常痛苦的事情，而且不符合依赖倒置原则，本文所涉及到的是通过注解的方式进行依赖注入可以解决这种问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/tags/Android/"/>
    
      <category term="Dagger2" scheme="http://zhoutao822.coding.me/tags/Dagger2/"/>
    
      <category term="DI" scheme="http://zhoutao822.coding.me/tags/DI/"/>
    
      <category term="依赖注入" scheme="http://zhoutao822.coding.me/tags/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Material组件-Menu</title>
    <link href="http://zhoutao822.coding.me/archives/e182bde6.html"/>
    <id>http://zhoutao822.coding.me/archives/e182bde6.html</id>
    <published>2019-06-24T12:09:54.000Z</published>
    <updated>2020-01-17T15:07:46.311Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:42 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://developer.android.com/guide/topics/ui/menus&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;菜单&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.android.com/reference/android/view/Menu&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Menu api&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jianshu.com/p/e99b5e8bd67b&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;图解 Android 事件分发机制&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://blog.csdn.net/carson_ho/article/details/54136311&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Android事件分发机制 详解攻略&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://juejin.im/entry/596329686fb9a06bc903b6fd&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Activity、View、Window的理解一篇文章就够了&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jianshu.com/p/2aeb2d10a831&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ViewPager 与 HorizontalScrollView 滑动冲突问题&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Menu，不同于Button、TextView之类的控件，它不需要在布局文件中指定位置，它是用于提供给用户额外的操作选择，因此不必局限于某一个固定位置，它可以搭配任何控件。&lt;/p&gt;&lt;p&gt;常见的Menu可以分为三种：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;ToolBar上的选项菜单，这是固定的设计，配合ToolBar实现很简单；&lt;/li&gt;&lt;li&gt;上下文菜单ContextMenu，与某一个控件关联，可以实现在点击（长按）的位置出现菜单选项的效果；&lt;/li&gt;&lt;li&gt;弹出菜单PopupMenu，动态生成，作为一个点击事件触发，出现的位置与被点击的控件位置绑定（上方或下方），与上下文菜单不同。&lt;/li&gt;&lt;/ol&gt;&lt;img src=&quot;/archives/e182bde6/1.jpg&quot;&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/tags/Android/"/>
    
      <category term="Material" scheme="http://zhoutao822.coding.me/tags/Material/"/>
    
      <category term="ViewPager" scheme="http://zhoutao822.coding.me/tags/ViewPager/"/>
    
      <category term="RecyclerView" scheme="http://zhoutao822.coding.me/tags/RecyclerView/"/>
    
      <category term="ToolBar" scheme="http://zhoutao822.coding.me/tags/ToolBar/"/>
    
      <category term="ContextMenu" scheme="http://zhoutao822.coding.me/tags/ContextMenu/"/>
    
      <category term="PopupMenu" scheme="http://zhoutao822.coding.me/tags/PopupMenu/"/>
    
      <category term="onClick" scheme="http://zhoutao822.coding.me/tags/onClick/"/>
    
      <category term="onLongClick" scheme="http://zhoutao822.coding.me/tags/onLongClick/"/>
    
      <category term="onTouchEvent" scheme="http://zhoutao822.coding.me/tags/onTouchEvent/"/>
    
      <category term="Android事件分发机制" scheme="http://zhoutao822.coding.me/tags/Android%E4%BA%8B%E4%BB%B6%E5%88%86%E5%8F%91%E6%9C%BA%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>Python风格规范</title>
    <link href="http://zhoutao822.coding.me/archives/10dab2b.html"/>
    <id>http://zhoutao822.coding.me/archives/10dab2b.html</id>
    <published>2019-06-14T14:04:50.000Z</published>
    <updated>2020-01-17T15:07:46.299Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:41 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Google Python风格规范&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id=&quot;分号&quot;&gt;&lt;a href=&quot;#分号&quot; class=&quot;headerlink&quot; title=&quot;分号&quot;&gt;&lt;/a&gt;分号&lt;/h2&gt;&lt;p&gt;不要在行尾加分号, 也不要用分号将两条命令放在同一行.&lt;/p&gt;&lt;h2 id=&quot;行长度&quot;&gt;&lt;a href=&quot;#行长度&quot; class=&quot;headerlink&quot; title=&quot;行长度&quot;&gt;&lt;/a&gt;行长度&lt;/h2&gt;&lt;p&gt;每行不超过80个字符&lt;/p&gt;&lt;p&gt;例外:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;长的导入模块语句&lt;/li&gt;&lt;li&gt;注释里的URL&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;不要使用反斜杠连接行.&lt;/p&gt;&lt;p&gt;Python会将 &lt;code&gt;圆括号, 中括号和花括号中的行隐式的连接起来&lt;/code&gt; , 你可以利用这个特点. 如果需要, 你可以在表达式外围增加一对额外的圆括号.&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Yes: foo_bar(self, width, height, color=&lt;span class=&quot;string&quot;&gt;&#39;black&#39;&lt;/span&gt;, design=&lt;span class=&quot;literal&quot;&gt;None&lt;/span&gt;, x=&lt;span class=&quot;string&quot;&gt;&#39;foo&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             emphasis=&lt;span class=&quot;literal&quot;&gt;None&lt;/span&gt;, highlight=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (width == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; height == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         color == &lt;span class=&quot;string&quot;&gt;&#39;red&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; emphasis == &lt;span class=&quot;string&quot;&gt;&#39;strong&#39;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;如果一个文本字符串在一行放不下, 可以使用圆括号来实现隐式行连接:&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x = (&lt;span class=&quot;string&quot;&gt;&#39;This will build a very long long &#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;string&quot;&gt;&#39;long long long long long long string&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在注释中，如果必要，将长的URL放在一行上。&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Yes:  &lt;span class=&quot;comment&quot;&gt;# See details at&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;# http://www.example.com/us/developer/documentation/api/content/v2.0/csv_file_name_extension_full_specification.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;No:  &lt;span class=&quot;comment&quot;&gt;# See details at&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;# http://www.example.com/us/developer/documentation/api/content/\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;# v2.0/csv_file_name_extension_full_specification.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Tips" scheme="http://zhoutao822.coding.me/categories/Tips/"/>
    
    
      <category term="Python" scheme="http://zhoutao822.coding.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python语言规范</title>
    <link href="http://zhoutao822.coding.me/archives/403cc251.html"/>
    <id>http://zhoutao822.coding.me/archives/403cc251.html</id>
    <published>2019-06-14T12:26:46.000Z</published>
    <updated>2020-01-17T15:07:46.300Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:41 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_language_rules/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Google Python语言规范&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id=&quot;1-Pylint&quot;&gt;&lt;a href=&quot;#1-Pylint&quot; class=&quot;headerlink&quot; title=&quot;1. Pylint&quot;&gt;&lt;/a&gt;1. Pylint&lt;/h2&gt;&lt;p&gt;pylint是一个可以查找py文件中部分错误以及不规范的语法，虽然pylint还不够完美但是我们可以借助它修正不规范的地方。&lt;/p&gt;&lt;p&gt;使用方式&lt;/p&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pylint xxx.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;输出类似于&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;************* Module wine&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wine.py:20:0: C0304: Final newline missing (missing-final-newline)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wine.py:1:0: C0111: Missing module docstring (missing-docstring)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wine.py:3:0: E0401: Unable to import &amp;#39;numpy&amp;#39; (import-error)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wine.py:4:0: E0401: Unable to import &amp;#39;sklearn.datasets&amp;#39; (import-error)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wine.py:5:0: E0401: Unable to import &amp;#39;sklearn.mixture&amp;#39; (import-error)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wine.py:6:0: C0103: Constant name &amp;quot;rawData&amp;quot; doesn&amp;#39;t conform to UPPER_CASE naming style (invalid-name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wine.py:8:0: C0103: Constant name &amp;quot;data&amp;quot; doesn&amp;#39;t conform to UPPER_CASE naming style (invalid-name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wine.py:9:0: C0103: Constant name &amp;quot;target&amp;quot; doesn&amp;#39;t conform to UPPER_CASE naming style (invalid-name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wine.py:11:0: C0103: Constant name &amp;quot;gmm&amp;quot; doesn&amp;#39;t conform to UPPER_CASE naming style (invalid-name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wine.py:15:0: C0103: Constant name &amp;quot;prediction&amp;quot; doesn&amp;#39;t conform to UPPER_CASE naming style (invalid-name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wine.py:19:0: C0103: Constant name &amp;quot;acc&amp;quot; doesn&amp;#39;t conform to UPPER_CASE naming style (invalid-name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Your code has been rated at -9.17&amp;#x2F;10 (previous run: 10.00&amp;#x2F;10, -19.17)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Tips" scheme="http://zhoutao822.coding.me/categories/Tips/"/>
    
    
      <category term="Python" scheme="http://zhoutao822.coding.me/tags/Python/"/>
    
      <category term="Pylint" scheme="http://zhoutao822.coding.me/tags/Pylint/"/>
    
  </entry>
  
  <entry>
    <title>Material组件-BottomSheetDialog</title>
    <link href="http://zhoutao822.coding.me/archives/4972210c.html"/>
    <id>http://zhoutao822.coding.me/archives/4972210c.html</id>
    <published>2019-06-14T12:21:20.000Z</published>
    <updated>2020-01-17T15:07:46.309Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:41 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://material.io/develop/android/components/bottom-sheet-behavior/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Material Design&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/material-components/material-components-android/blob/master/docs/getting-started.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Getting started with Material Components for Android&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;BottomSheetDialog，顾名思义就是从界面底部往上出现的Dialog，它是Material Design的控件之一，目前在&lt;a href=&quot;https://github.com/material-components/material-components-android&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Material Components&lt;/a&gt;库中。&lt;/p&gt;&lt;img src=&quot;/archives/4972210c/bottomsheet-1.gif&quot;&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://zhoutao822.coding.me/tags/Android/"/>
    
      <category term="Material" scheme="http://zhoutao822.coding.me/tags/Material/"/>
    
      <category term="BottomSheetDialog" scheme="http://zhoutao822.coding.me/tags/BottomSheetDialog/"/>
    
      <category term="ViewPager" scheme="http://zhoutao822.coding.me/tags/ViewPager/"/>
    
      <category term="RecyclerView" scheme="http://zhoutao822.coding.me/tags/RecyclerView/"/>
    
  </entry>
  
  <entry>
    <title>正则式</title>
    <link href="http://zhoutao822.coding.me/archives/75276563.html"/>
    <id>http://zhoutao822.coding.me/archives/75276563.html</id>
    <published>2019-06-13T11:37:03.000Z</published>
    <updated>2020-01-17T15:07:46.298Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:41 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/897692888725344/923056128128864&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;正则表达式-廖雪峰&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;1.用&lt;code&gt;\d&lt;/code&gt;可以匹配一个数字，&lt;code&gt;\w&lt;/code&gt;可以匹配一个字母或数字，所以：&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;#39;00\d&amp;#39;&lt;/code&gt;可以匹配&lt;code&gt;&amp;#39;007&amp;#39;&lt;/code&gt;，但无法匹配&lt;code&gt;&amp;#39;00A&amp;#39;&lt;/code&gt;；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;#39;\d\d\d&amp;#39;&lt;/code&gt;可以匹配&lt;code&gt;&amp;#39;010&amp;#39;&lt;/code&gt;；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;#39;\w\w\d&amp;#39;&lt;/code&gt;可以匹配&lt;code&gt;&amp;#39;py3&amp;#39;&lt;/code&gt;；&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;2.&lt;code&gt;.&lt;/code&gt;可以匹配任意字符，所以：&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;&amp;#39;py.&amp;#39;&lt;/code&gt;可以匹配&lt;code&gt;&amp;#39;pyc&amp;#39;&lt;/code&gt;、&lt;code&gt;&amp;#39;pyo&amp;#39;&lt;/code&gt;、&lt;code&gt;&amp;#39;py!&amp;#39;&lt;/code&gt;等等。&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;3.用&lt;code&gt;*&lt;/code&gt;表示任意个字符（包括0个），用&lt;code&gt;+&lt;/code&gt;表示至少一个字符，用&lt;code&gt;?&lt;/code&gt;表示0个或1个字符，用&lt;code&gt;{n}&lt;/code&gt;表示n个字符，用&lt;code&gt;{n,m}&lt;/code&gt;表示n-m个字符：&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;来看一个复杂的例子：&lt;code&gt;\d{3}\s+\d{3,8}&lt;/code&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;\d{3}&lt;/code&gt;表示匹配3个数字，例如&lt;code&gt;&amp;#39;010&amp;#39;&lt;/code&gt;；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;\s&lt;/code&gt;可以匹配一个空格（也包括Tab等空白符），所以&lt;code&gt;\s+&lt;/code&gt;表示至少有一个空格，例如匹配&lt;code&gt;&amp;#39; &amp;#39;&lt;/code&gt;，&lt;code&gt;&amp;#39; &amp;#39;&lt;/code&gt;等；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;\d{3,8}&lt;/code&gt;表示3-8个数字，例如&lt;code&gt;&amp;#39;1234567&amp;#39;&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Tips" scheme="http://zhoutao822.coding.me/categories/Tips/"/>
    
    
      <category term="Regex" scheme="http://zhoutao822.coding.me/tags/Regex/"/>
    
  </entry>
  
  <entry>
    <title>VSCode搭建LaTeX论文写作环境</title>
    <link href="http://zhoutao822.coding.me/archives/212d026f.html"/>
    <id>http://zhoutao822.coding.me/archives/212d026f.html</id>
    <published>2019-06-12T12:46:05.000Z</published>
    <updated>2020-01-17T15:07:46.299Z</updated>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Jan 18 2020 19:58:41 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ustctug/ustcthesis&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;中国科学技术大学学位论文 LaTeX 模板&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/yinqingwang/article/details/79684419&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;论文写作的又一利器：VSCode + LaTeX Workshop + MikTex + Git&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://miktex.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MikTeX&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://www.tug.org/mactex/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MacTeX&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://code.visualstudio.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;VSCode&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id=&quot;Windows环境&quot;&gt;&lt;a href=&quot;#Windows环境&quot; class=&quot;headerlink&quot; title=&quot;Windows环境&quot;&gt;&lt;/a&gt;Windows环境&lt;/h2&gt;&lt;h3 id=&quot;1-安装LaTeX发行版&quot;&gt;&lt;a href=&quot;#1-安装LaTeX发行版&quot; class=&quot;headerlink&quot; title=&quot;1. 安装LaTeX发行版&quot;&gt;&lt;/a&gt;1. 安装LaTeX发行版&lt;/h3&gt;&lt;p&gt;在Windows下我选择的是MikTeX，Mac下选择的是MacTex，这个LaTeX发行版相当于一个开发工具包，你需要的编译器以及某些资源文件都包含在这个包里面，安装完成后可以通过命令行启用。&lt;/p&gt;&lt;p&gt;在Windows下MikTeX的安装教程链接为&lt;a href=&quot;https://miktex.org/howto/install-miktex&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Install MiKTeX on Windows&lt;/a&gt;，链接里也给出了安装包的地址&lt;a href=&quot;https://miktex.org/download&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Basic MiKTeX Installer&lt;/a&gt;，安装完成后打开 MiKTeX Console 更新package。目前这个阶段还不需要安装额外的package，这个我们可以等到编译论文的时候再下载。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tips" scheme="http://zhoutao822.coding.me/categories/Tips/"/>
    
    
      <category term="VSCode" scheme="http://zhoutao822.coding.me/tags/VSCode/"/>
    
      <category term="LaTeX" scheme="http://zhoutao822.coding.me/tags/LaTeX/"/>
    
      <category term="Windows" scheme="http://zhoutao822.coding.me/tags/Windows/"/>
    
      <category term="Mac" scheme="http://zhoutao822.coding.me/tags/Mac/"/>
    
      <category term="MacTeX" scheme="http://zhoutao822.coding.me/tags/MacTeX/"/>
    
      <category term="MikTeX" scheme="http://zhoutao822.coding.me/tags/MikTeX/"/>
    
  </entry>
  
  <entry>
    <title>深度学习-深度学习中的结构化概率模型</title>
    <link href="http://zhoutao822.coding.me/archives/e4c77c8d.html"/>
    <id>http://zhoutao822.coding.me/archives/e4c77c8d.html</id>
    <published>2019-03-17T15:17:30.000Z</published>
    <updated>2020-01-17T15:07:46.297Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;!-- build time:Sat Jan 18 2020 19:58:41 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="Deep Learning" scheme="http://zhoutao822.coding.me/categories/Deep-Learning/"/>
    
    
      <category term="Theory" scheme="http://zhoutao822.coding.me/tags/Theory/"/>
    
  </entry>
  
</feed>
